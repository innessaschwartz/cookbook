{"version":3,"file":"ng-bootstrap-alert.js.map","sources":["ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.service.ts","ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.component.ts","ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.module.ts","ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport { NgBootstrapAlert } from './ng-bootstrap-alert';\nimport { AlertType } from './ng-bootstrap-alert';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class NgBootstrapAlertService {\n\n    public _bootstrapAlert: BehaviorSubject<NgBootstrapAlert>;\n\n    constructor() {\n        this._bootstrapAlert = new BehaviorSubject<NgBootstrapAlert>( null );\n    }\n\n    public alert(alert: NgBootstrapAlert) {\n        this._bootstrapAlert.next(alert);\n    }\n\n}\n","import { Component, ElementRef, Input } from '@angular/core';\nimport { NgBootstrapAlert, NgBootstrapAlertInterface } from './ng-bootstrap-alert';\nimport { NgBootstrapAlertService } from './ng-bootstrap-alert.service';\nimport { trigger, state, transition, style, animate } from '@angular/animations';\n\n@Component( {\n    selector: 'ng-bootstrap-alert',\n    template: `<div [ngClass]=\"alertPosition\" class=\"bootstrap-alert col-lg-4\">\r\n\t<div *ngFor=\"let bootstrapAlert of bootstrapAlerts\" id=\"{{bootstrapAlert.uuid}}\" class=\"alert alert-dismissable mb-2\" [ngClass]=\"bootstrapAlert.type\" [@alertVisible]=\"bootstrapAlert.state\">\r\n\t\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\">x</button>\r\n\t\t{{bootstrapAlert.message}}\r\n\t</div>\r\n</div>`,\n    styles: [`.bootstrap-alert{z-index:2000;position:fixed}.top-left{left:1rem;top:1rem}.top-center{margin:auto;left:0;right:0;top:1rem}.top-right{right:1rem;top:1rem}.bottom-left{left:1rem;bottom:1rem}.bottom-center{margin:auto;left:0;right:0;bottom:1rem}.bottom-right{right:1rem;bottom:1rem}`],\n    animations: [\n        trigger( 'alertVisible', [\n            state( 'visible', style( { opacity: 1 } ) ),\n            state( 'destroyed', style( { opacity: 0 } ) ),\n            transition( 'visible => destroyed', animate( '600ms' ) ),\n            transition( 'destroyed => visible', animate( '600ms' ) ),\n        ] )\n    ]\n} )\n\nexport class NgBootstrapAlertComponent {\n\n    @Input() alertPosition: string;\n\n    bootstrapAlerts: Array<NgBootstrapAlertInterface>;\n\n    constructor( private bootstrapAlertService: NgBootstrapAlertService ) {\n\n        this.bootstrapAlerts = [];\n        this.bootstrapAlertService._bootstrapAlert.subscribe(\n            ( bootstrapAlert: NgBootstrapAlertInterface ) => {\n                this.show( bootstrapAlert );\n            }\n        );\n\n    }\n\n    readonly DEFAULT_TIMEOUT = 3000;\n    readonly FADE_TIMEOUT = 600;\n\n    show( bootstrapAlert: NgBootstrapAlertInterface ): void {\n        if ( !bootstrapAlert ) {\n            return;\n        }\n        this.bootstrapAlerts.unshift( bootstrapAlert );\n        setTimeout(\n            () => {\n                this.destroy( bootstrapAlert.uuid );\n            }, bootstrapAlert.timeoutInMiliSeconds ? bootstrapAlert.timeoutInMiliSeconds : this.DEFAULT_TIMEOUT\n        );\n    }\n\n    fade( bootstrapAlert): void {\n        bootstrapAlert.state = 'destroyed';\n    }\n\n    destroy( uuid: string ): void {\n        const bootstrapAlertIndex = this.findIndex( this.bootstrapAlerts, 'uuid', uuid );\n        if ( bootstrapAlertIndex !== -1 ) {\n            const bootstrapAlert = this.bootstrapAlerts[bootstrapAlertIndex];\n            bootstrapAlert.state = 'destroyed';\n            setTimeout(\n              () => {\n                  this.bootstrapAlerts.splice( bootstrapAlertIndex, 1 );\n              }, this.FADE_TIMEOUT\n            );\n        }\n    }\n\n    findIndex(array, attr, value): number {\n        for (let i = 0; i < array.length; i += 1) {\n            if (array[i][attr] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgBootstrapAlertService } from './ng-bootstrap-alert.service';\nimport { NgBootstrapAlertComponent } from './ng-bootstrap-alert.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgBootstrapAlert } from './ng-bootstrap-alert';\n\n@NgModule( {\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule\n    ],\n    declarations: [\n        NgBootstrapAlertComponent,\n    ],\n    exports: [\n        NgBootstrapAlertComponent\n    ],\n    providers: [\n        NgBootstrapAlertService,\n    ]\n} )\n\nexport class NgBootstrapAlertModule {}\n","export interface NgBootstrapAlertInterface {\r\n    message: string;\r\n    timeoutInMiliSeconds: number;\r\n    type: AlertType;\r\n    uuid: string;\r\n    state: string;\r\n}\r\n\r\nexport type AlertType = 'alert-danger' | 'alert-success' | 'alert-info' | 'alert-warning';\r\n\r\nexport class NgBootstrapAlert implements NgBootstrapAlertInterface {\r\n    private _message: string;\r\n    private _timeoutInMiliSeconds: number;\r\n    private _type: AlertType;\r\n    private _uuid: string;\r\n    private _state: string;\r\n\r\n    constructor( message: string, type: AlertType ) {\r\n        this._uuid = this.generateUUId();\r\n        this._type = type;\r\n        this._message = message;\r\n        this._state = 'visible';\r\n    }\r\n\r\n    private generateUUId() {\r\n        return this.randomizer() + this.randomizer() + '-' + this.randomizer() + '-' + this.randomizer() + '-' +\r\n            this.randomizer() + '-' + this.randomizer() + this.randomizer() + this.randomizer();\r\n    }\r\n\r\n    private randomizer() {\r\n        return Math.floor(( 1 + Math.random() ) * 0x10000 ).toString( 16 ).substring( 1 );\r\n    }\r\n\r\n    public get message(): string {\r\n        return this._message;\r\n    }\r\n\r\n    public set message( message: string ) {\r\n        this._message = message;\r\n    }\r\n\r\n    public get timeoutInMiliSeconds(): number {\r\n        return this._timeoutInMiliSeconds;\r\n    }\r\n\r\n    public set timeoutInMiliSeconds( timeoutInMiliSeconds: number ) {\r\n        this._timeoutInMiliSeconds = timeoutInMiliSeconds;\r\n    }\r\n\r\n    public get type(): AlertType {\r\n        return this._type;\r\n    }\r\n\r\n    public set type( type: AlertType ) {\r\n        this._type = type;\r\n    }\r\n\r\n    public get uuid(): string {\r\n        return this._uuid;\r\n    }\r\n\r\n    public get state(): string {\r\n        return this._state;\r\n    }\r\n\r\n    public set state( state: string ) {\r\n        this._state = state;\r\n    }\r\n}\r\n"],"names":["state"],"mappings":"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"}
