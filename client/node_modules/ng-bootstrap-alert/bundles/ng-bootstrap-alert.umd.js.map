{"version":3,"file":"ng-bootstrap-alert.umd.js.map","sources":["ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.service.ts","ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.component.ts","ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.module.ts","ng://ng-bootstrap-alert/lib/ng-bootstrap-alert.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport { NgBootstrapAlert } from './ng-bootstrap-alert';\nimport { AlertType } from './ng-bootstrap-alert';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class NgBootstrapAlertService {\n\n    public _bootstrapAlert: BehaviorSubject<NgBootstrapAlert>;\n\n    constructor() {\n        this._bootstrapAlert = new BehaviorSubject<NgBootstrapAlert>( null );\n    }\n\n    public alert(alert: NgBootstrapAlert) {\n        this._bootstrapAlert.next(alert);\n    }\n\n}\n","import { Component, ElementRef, Input } from '@angular/core';\nimport { NgBootstrapAlert, NgBootstrapAlertInterface } from './ng-bootstrap-alert';\nimport { NgBootstrapAlertService } from './ng-bootstrap-alert.service';\nimport { trigger, state, transition, style, animate } from '@angular/animations';\n\n@Component( {\n    selector: 'ng-bootstrap-alert',\n    template: `<div [ngClass]=\"alertPosition\" class=\"bootstrap-alert col-lg-4\">\r\n\t<div *ngFor=\"let bootstrapAlert of bootstrapAlerts\" id=\"{{bootstrapAlert.uuid}}\" class=\"alert alert-dismissable mb-2\" [ngClass]=\"bootstrapAlert.type\" [@alertVisible]=\"bootstrapAlert.state\">\r\n\t\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\">x</button>\r\n\t\t{{bootstrapAlert.message}}\r\n\t</div>\r\n</div>`,\n    styles: [`.bootstrap-alert{z-index:2000;position:fixed}.top-left{left:1rem;top:1rem}.top-center{margin:auto;left:0;right:0;top:1rem}.top-right{right:1rem;top:1rem}.bottom-left{left:1rem;bottom:1rem}.bottom-center{margin:auto;left:0;right:0;bottom:1rem}.bottom-right{right:1rem;bottom:1rem}`],\n    animations: [\n        trigger( 'alertVisible', [\n            state( 'visible', style( { opacity: 1 } ) ),\n            state( 'destroyed', style( { opacity: 0 } ) ),\n            transition( 'visible => destroyed', animate( '600ms' ) ),\n            transition( 'destroyed => visible', animate( '600ms' ) ),\n        ] )\n    ]\n} )\n\nexport class NgBootstrapAlertComponent {\n\n    @Input() alertPosition: string;\n\n    bootstrapAlerts: Array<NgBootstrapAlertInterface>;\n\n    constructor( private bootstrapAlertService: NgBootstrapAlertService ) {\n\n        this.bootstrapAlerts = [];\n        this.bootstrapAlertService._bootstrapAlert.subscribe(\n            ( bootstrapAlert: NgBootstrapAlertInterface ) => {\n                this.show( bootstrapAlert );\n            }\n        );\n\n    }\n\n    readonly DEFAULT_TIMEOUT = 3000;\n    readonly FADE_TIMEOUT = 600;\n\n    show( bootstrapAlert: NgBootstrapAlertInterface ): void {\n        if ( !bootstrapAlert ) {\n            return;\n        }\n        this.bootstrapAlerts.unshift( bootstrapAlert );\n        setTimeout(\n            () => {\n                this.destroy( bootstrapAlert.uuid );\n            }, bootstrapAlert.timeoutInMiliSeconds ? bootstrapAlert.timeoutInMiliSeconds : this.DEFAULT_TIMEOUT\n        );\n    }\n\n    fade( bootstrapAlert): void {\n        bootstrapAlert.state = 'destroyed';\n    }\n\n    destroy( uuid: string ): void {\n        const bootstrapAlertIndex = this.findIndex( this.bootstrapAlerts, 'uuid', uuid );\n        if ( bootstrapAlertIndex !== -1 ) {\n            const bootstrapAlert = this.bootstrapAlerts[bootstrapAlertIndex];\n            bootstrapAlert.state = 'destroyed';\n            setTimeout(\n              () => {\n                  this.bootstrapAlerts.splice( bootstrapAlertIndex, 1 );\n              }, this.FADE_TIMEOUT\n            );\n        }\n    }\n\n    findIndex(array, attr, value): number {\n        for (let i = 0; i < array.length; i += 1) {\n            if (array[i][attr] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgBootstrapAlertService } from './ng-bootstrap-alert.service';\nimport { NgBootstrapAlertComponent } from './ng-bootstrap-alert.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgBootstrapAlert } from './ng-bootstrap-alert';\n\n@NgModule( {\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule\n    ],\n    declarations: [\n        NgBootstrapAlertComponent,\n    ],\n    exports: [\n        NgBootstrapAlertComponent\n    ],\n    providers: [\n        NgBootstrapAlertService,\n    ]\n} )\n\nexport class NgBootstrapAlertModule {}\n","export interface NgBootstrapAlertInterface {\r\n    message: string;\r\n    timeoutInMiliSeconds: number;\r\n    type: AlertType;\r\n    uuid: string;\r\n    state: string;\r\n}\r\n\r\nexport type AlertType = 'alert-danger' | 'alert-success' | 'alert-info' | 'alert-warning';\r\n\r\nexport class NgBootstrapAlert implements NgBootstrapAlertInterface {\r\n    private _message: string;\r\n    private _timeoutInMiliSeconds: number;\r\n    private _type: AlertType;\r\n    private _uuid: string;\r\n    private _state: string;\r\n\r\n    constructor( message: string, type: AlertType ) {\r\n        this._uuid = this.generateUUId();\r\n        this._type = type;\r\n        this._message = message;\r\n        this._state = 'visible';\r\n    }\r\n\r\n    private generateUUId() {\r\n        return this.randomizer() + this.randomizer() + '-' + this.randomizer() + '-' + this.randomizer() + '-' +\r\n            this.randomizer() + '-' + this.randomizer() + this.randomizer() + this.randomizer();\r\n    }\r\n\r\n    private randomizer() {\r\n        return Math.floor(( 1 + Math.random() ) * 0x10000 ).toString( 16 ).substring( 1 );\r\n    }\r\n\r\n    public get message(): string {\r\n        return this._message;\r\n    }\r\n\r\n    public set message( message: string ) {\r\n        this._message = message;\r\n    }\r\n\r\n    public get timeoutInMiliSeconds(): number {\r\n        return this._timeoutInMiliSeconds;\r\n    }\r\n\r\n    public set timeoutInMiliSeconds( timeoutInMiliSeconds: number ) {\r\n        this._timeoutInMiliSeconds = timeoutInMiliSeconds;\r\n    }\r\n\r\n    public get type(): AlertType {\r\n        return this._type;\r\n    }\r\n\r\n    public set type( type: AlertType ) {\r\n        this._type = type;\r\n    }\r\n\r\n    public get uuid(): string {\r\n        return this._uuid;\r\n    }\r\n\r\n    public get state(): string {\r\n        return this._state;\r\n    }\r\n\r\n    public set state( state: string ) {\r\n        this._state = state;\r\n    }\r\n}\r\n"],"names":["BehaviorSubject","Injectable","Component","trigger","state","style","transition","animate","Input","NgModule","CommonModule","BrowserAnimationsModule"],"mappings":"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"}
